services:
  db:
    image: postgres:16
    container_name: booking_db
    env_file:
      - .env-prod
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d booking_app" ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7
    container_name: booking_redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      timeout: 5s

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-prod
    command: [ "/booking/docker/start_app.sh" ]
    ports:
      - 7777:8000
    depends_on:
      db:
        condition: service_healthy

  celery:
    image: booking_celery
    build:
      context: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    container_name: booking_celery
    command: [ "/booking/docker/start_celery.sh", "celery" ]
    depends_on:
      redis:
        condition: service_healthy

  flower:
    image: booking_flower
    build:
      context: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    container_name: booking_flower
    command: [ "/booking/docker/start_celery.sh", "flower" ]
    ports:
      - 5555:5555
    depends_on:
      redis:
        condition: service_healthy
      celery:
        condition: service_started
